
import pytest
from clock_project.genome_analysis.get_model_fitting_tree import decorate_vertebrate_tree, model_fitting_tree
from cogent3 import get_app, open_data_store
from cogent3 import load_tree
import json

load_json_app = get_app("load_json")

@pytest.fixture
def tip_names():
    return ['petromyzon_marinus',
 'eptatretus_burgeri',
 'aquila_chrysaetos_chrysaetos',
 'strigops_habroptila',
 'serinus_canaria',
 'geospiza_fortis',
 'taeniopygia_guttata',
 'ficedula_albicollis',
 'parus_major',
 'anser_brachyrhynchus',
 'anas_platyrhynchos',
 'gallus_gallus',
 'meleagris_gallopavo',
 'coturnix_japonica',
 'struthio_camelus_australis',
 'crocodylus_porosus',
 'chrysemys_picta_bellii',
 'terrapene_carolina_triunguis',
 'gopherus_evgoodei',
 'chelonoidis_abingdonii',
 'pelodiscus_sinensis',
 'pseudonaja_textilis',
 'notechis_scutatus',
 'laticauda_laticaudata',
 'naja_naja',
 'anolis_carolinensis',
 'podarcis_muralis',
 'salvator_merianae',
 'sphenodon_punctatus',
 'phascolarctos_cinereus',
 'vombatus_ursinus',
 'notamacropus_eugenii',
 'sarcophilus_harrisii',
 'monodelphis_domestica',
 'Elephant',
 'Hyrax',
 'Lesser_hedgehog_tenrec',
 'Armadillo',
 'Sloth',
 'Polar_bear',
 'American_black_bear',
 'ursus_thibetanus_thibetanus',
 'Giant_panda',
 'zalophus_californianus',
 'Ferret',
 'Neogale_vison',
 'Dingo',
 'Dog',
 'Red_fox',
 'Cat',
 'lynx_canadensis',
 'Leopard',
 'Lion',
 'Tiger',
 'suricata_suricatta',
 'Horse',
 'Donkey',
 'Narwhal',
 'Beluga_whale',
 'Vaquita',
 'Dolphin',
 'Sperm_whale',
 'Blue_whale',
 'Sheep_(texel)',
 'Goat',
 'Wild_yak',
 'Domestic_yak',
 'American_bison',
 'Cow',
 'Bos_indicus_x_Bos_taurus',
 'Siberian_musk_deer',
 'Yarkand_deer',
 'Pig',
 'sus_scrofa_strain',
 'sus_scrofa_strain',
 'sus_scrofa_strain',
 'sus_scrofa_strain',
 'sus_scrofa_strain',
 'sus_scrofa_strain',
 'sus_scrofa_strain',
 'sus_scrofa_strain',
 'sus_scrofa_strain',
 'sus_scrofa_strain',
 'sus_scrofa_strain',
 'sus_scrofa_strain',
 'Chacoan_peccary',
 'Arabian_camel',
 'Alpaca',
 'Greater_horseshoe_bat',
 'Megabat',
 'Microbat',
 'Hedgehog',
 'castor_canadensis',
 'Kangaroo_rat',
 'Algerian_mouse',
 'Steppe_mouse',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'Mouse',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'mus_musculus_strain',
 'Ryukyu_mouse',
 'Shrew_mouse',
 'Rat',
 'meriones_unguiculatus',
 'Cricetulus_griseus_strain_17A/GY',
 'Cricetulus_griseus_CHOK1GS_HDv1',
 'Golden_Hamster',
 'Prairie_vole',
 'Northern_American_deer_mouse',
 'Upper_Galilee_mountains_blind_mole_rat',
 'Lesser_Egyptian_jerboa',
 'Long_tailed_chinchilla',
 'Degu',
 'Guinea_Pig',
 'cavia_aperea',
 'Heterocephalus_glaber_reference_strain',
 'fukomys_damarensis',
 'Arctic_ground_squirrel',
 'Squirrel',
 'spermophilus_dauricus',
 'Alpine_marmot',
 'Eurasian_red_squirrel',
 'Rabbit',
 'Pika',
 'Chimpanzee',
 'Bonobo',
 'Human',
 'Gorilla',
 'Sumatran_orangutan',
 'Gibbon',
 'colobus_angolensis_palliatus',
 'piliocolobus_tephrosceles',
 'Golden_snub_nosed_monkey',
 'Black_snub_nosed_monkey',
 'Sooty_mangabey',
 'Drill',
 'theropithecus_gelada',
 'Olive_baboon',
 'Macaque',
 'Crab_eating_macaque',
 'Pig_tailed_macaque',
 'Vervet_AGM',
 'Panamanian_white_faced_capuchin',
 'Bolivian_squirrel_monkey',
 "Ma's_night_monkey",
 'White_tufted_ear_marmoset',
 'Tarsier',
 'Greater_bamboo_lemur',
 "Coquerel's_sifaka",
 'Mouse_Lemur',
 'Bushbaby',
 'Tree_Shrew',
 'Shrew',
 'ornithorhynchus_anatinus',
 'xenopus_tropicalis',
 'leptobrachium_leishanense',
 'latimeria_chalumnae',
 'callorhinchus_milii',
 'denticeps_clupeoides',
 'clupea_harengus',
 'electrophorus_electricus',
 'ictalurus_punctatus',
 'pygocentrus_nattereri',
 'astyanax_mexicanus',
 'cyprinus_carpio_carpio',
 'carassius_auratus',
 'sinocyclocheilus_grahami',
 'danio_rerio',
 'seriola_dumerili',
 'seriola_lalandi_dorsalis',
 'lates_calcarifer',
 'scophthalmus_maximus',
 'anabas_testudineus',
 'betta_splendens',
 'mastacembelus_armatus',
 'dicentrarchus_labrax',
 'larimichthys_crocea',
 'sparus_aurata',
 'labrus_bergylta',
 'sander_lucioperca',
 'cottoperca_gobio',
 'cyclopterus_lumpus',
 'gasterosteus_aculeatus',
 'cynoglossus_semilaevis',
 'amphiprion_percula',
 'amphiprion_ocellaris',
 'acanthochromis_polyacanthus',
 'stegastes_partitus',
 'maylandia_zebra',
 'astatotilapia_calliptera',
 'pundamilia_nyererei',
 'haplochromis_burtoni',
 'neolamprologus_brichardi',
 'oreochromis_niloticus',
 'amphilophus_citrinellus',
 'kryptolebias_marmoratus',
 'nothobranchius_furzeri',
 'fundulus_heteroclitus',
 'cyprinodon_variegatus',
 'poecilia_formosa',
 'poecilia_latipinna',
 'poecilia_reticulata',
 'xiphophorus_maculatus',
 'xiphophorus_couchianus',
 'oryzias_melastigma',
 'oryzias_javanicus',
 'oryzias_latipes',
 'oryzias_sinensis',
 'takifugu_rubripes',
 'tetraodon_nigroviridis',
 'hippocampus_comes',
 'myripristis_murdjan',
 'gadus_morhua',
 'salmo_salar',
 'salmo_trutta',
 'oncorhynchus_kisutch',
 'oncorhynchus_tshawytscha',
 'oncorhynchus_mykiss',
 'hucho_hucho',
 'esox_lucius',
 'scleropages_formosus',
 'paramormyrops_kingsleyae',
 'lepisosteus_oculatus',
 'erpetoichthys_calabaricus',
 'ciona_intestinalis',
 'ciona_savignyi',
 'drosophila_melanogaster',
 'caenorhabditis_elegans',
 'saccharomyces_cerevisiae']

@pytest.fixture
def aln_path():
    dir = '/Users/gulugulu/Desktop/honours/data_local_2/alignments_3rd_filtered_550_threshold'
    aln_input_dstore = open_data_store(dir, suffix='json', mode='r')
    return aln_input_dstore.completed[0]

@pytest.fixture
def vertabrate_tree_path():
    tree_path = '/Users/gulugulu/repos/PuningAnalysis/data/dataset2_ensemble_trees/raw_data/tree_nh_file/vertebrates_species-tree_Ensembl.nh'
    return tree_path

@pytest.fixture
def common_names_mapping():
    with open ('/Users/gulugulu/repos/PuningAnalysis/results/output_data/common_names_mapping.json',  'r') as common_name_infile:
        common_names_mapping = json.load(common_name_infile)
    return common_names_mapping

@pytest.fixture
def sub_tree(vertabrate_tree_path, aln_path, common_names_mapping):
    aln = load_json_app(aln_path)
    tree = decorate_vertebrate_tree(vertabrate_tree_path, common_names_mapping)
    sub_tree = tree.get_sub_tree(aln.names)
    return sub_tree

def test_decorate_vertebrate_tree(vertabrate_tree_path, common_names_mapping, tip_names):
    tree = decorate_vertebrate_tree(vertabrate_tree_path, common_names_mapping)
    assert len(tree.get_tip_names()) == len(tip_names)
    assert set(tree.get_tip_names()) == set(tip_names)

def test_model_fitting_tree(aln_path, sub_tree):
    model_fitting_result = model_fitting_tree(aln_path)
    aln = load_json_app(aln_path)
    assert model_fitting_result is not None
    assert len(model_fitting_result.lf.tree.get_tip_names()) == len(aln.names)
    assert model_fitting_result.name == 'GN'
    assert set(model_fitting_result.lf.tree.get_tip_names()) == set(aln.names)
    assert set(model_fitting_result.lf.tree.get_tip_names()) == set(sub_tree.get_tip_names())



